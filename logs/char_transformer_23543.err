Traceback (most recent call last):
  File "/var/scratch/tng204/thesis/bachelor_thesis/stable_char_transformer.py", line 1017, in <module>
    main()
  File "/var/scratch/tng204/thesis/bachelor_thesis/stable_char_transformer.py", line 962, in main
    model, (train_losses, val_losses) = train_model(
  File "/var/scratch/tng204/thesis/bachelor_thesis/stable_char_transformer.py", line 676, in train_model
    scaler.scale(loss).backward()
  File "/var/scratch/tng204/anaconda3/envs/mltrain/lib/python3.10/site-packages/torch/_tensor.py", line 396, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/var/scratch/tng204/anaconda3/envs/mltrain/lib/python3.10/site-packages/torch/autograd/__init__.py", line 173, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: CUDA out of memory. Tried to allocate 1.83 GiB (GPU 0; 10.57 GiB total capacity; 7.93 GiB already allocated; 456.00 MiB free; 9.28 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
